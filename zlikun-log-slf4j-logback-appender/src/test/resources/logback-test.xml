<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true" scan="true" scanPeriod="3 seconds">

	<contextName>zlikun-log</contextName>

	<timestamp key="byDate" datePattern="yyyyMMdd"/>

	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- 指定输出流，默认：System.out，这里修改为：System.err，允许取值参考：ch.qos.logback.core.joran.spi.ConsoleTarget -->
		<target>System.err</target>
		<!-- 默认Encoder：ch.qos.logback.classic.encoder.PatternLayoutEncoder -->
		<encoder>
			<!-- 测试发现：未在Action中解析的属性，应在子标签中设定才能生效 -->
			<charset>UTF-8</charset>
			<!-- ch.qos.logback.classic.PatternLayout -->
			<pattern>%d{yyyy/MM/dd HH:mm:ss} | %contextName | %t | %level | %logger | %msg%n</pattern>
		</encoder>
	</appender>

	<appender name="FILE" class="ch.qos.logback.core.FileAppender">
		<!-- 设置日志文件路径(只能设置为本地文件路径) -->
		<!-- 绝对路径 -->
		<!-- <file>/data/simple/server.log</file> -->
		<!-- 相对路径，相对于当前工程根目录 -->
		<file>build/data/server.log</file>
		<!-- 设置IO缓冲区，取值单位参考：ch.qos.logback.core.util.FileSize，该设置默认值：8kb -->
		<bufferSize>4 kb</bufferSize>
		<!-- 设置文件写入方式是否追加，默认：true，false表示每次都清空上次写入 -->
		<append>false</append>
		<!-- 于#start()方法中使用，用于强制append = true，并输出警告，默认：false(不启用) -->
		<prudent>true</prudent>
		<!-- 设置是否立即刷新，默认：true -->
		<immediateFlush>false</immediateFlush>
		<encoder>
			<charset>UTF-8</charset>
			<pattern>%d{yyyy/MM/dd HH:mm:ss} | %contextName | %t | %level | %logger | %msg%n</pattern>
		</encoder>
	</appender>

	<appender name="ROLLING_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 下面几项设置继承自FileAppender -->
		<file>build/data/server.rolling.log</file>
		<bufferSize>32 kb</bufferSize>
		<!-- 配置滚动策略：https://logback.qos.ch/manual/appenders.html#TimeBasedRollingPolicy -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 每天滚动一次，通过指定.zip/.gz压缩日志文件 -->
			<fileNamePattern>build/data/server.%d{yyyyMMdd}.log.zip</fileNamePattern>
			<!-- 最大保留30天，总日志量不能超过3G，单个日志文件不能超过100MB -->
			<maxHistory>30</maxHistory>
			<maxFileSize>100MB</maxFileSize>
			<totalSizeCap>3GB</totalSizeCap>
		</rollingPolicy>

		<encoder>
			<charset>UTF-8</charset>
			<pattern>%d{yyyy/MM/dd HH:mm:ss} | %contextName | %t | %level | %logger | %msg%n</pattern>
		</encoder>
	</appender>

	<appender name="ROLLING_FILE2" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>build/data/server-${byDate}.log</file>
		<bufferSize>32 kb</bufferSize>

		<!-- 根据固定索引计数滚动 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>build/data/server.%i.log.zip</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>9</maxIndex>
		</rollingPolicy>

		<!-- 配合FixedWindowRollingPolicy滚动策略，每5MB滚动一次日志 -->
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>4KB</maxFileSize>
		</triggeringPolicy>

		<encoder>
			<charset>UTF-8</charset>
			<pattern>%d{yyyy/MM/dd HH:mm:ss} | %contextName | %t | %level | %logger | %msg%n</pattern>
		</encoder>
	</appender>

	<root level="INFO">
		<appender-ref ref="STDOUT" />
	</root>

	<logger name="com.zlikun.log.ConsoleAppenderTest" level="DEBUG" additivity="false">
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="com.zlikun.log.FileAppenderTest" level="DEBUG" additivity="false">
		<appender-ref ref="FILE" />
	</logger>
	<logger name="com.zlikun.log.RollingFileAppenderTest" level="DEBUG" additivity="false">
		<appender-ref ref="ROLLING_FILE" />
	</logger>

	<shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook" />

</configuration>